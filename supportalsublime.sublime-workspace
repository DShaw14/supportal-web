{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"time",
				"time_available"
			],
			[
				"buck",
				"bucket_content"
			],
			[
				"bucket",
				"bucket_issues"
			],
			[
				"issue",
				"issue_payload"
			],
			[
				"user",
				"userProfileCreationForm"
			],
			[
				"login",
				"login_required"
			],
			[
				"first",
				"firstapp_views"
			],
			[
				"Http",
				"HttpResponseRedirect"
			],
			[
				"red",
				"HttpResponseRedirect"
			],
			[
				"view",
				"viewIssues"
			],
			[
				"suppo",
				"supportal_manageIssues"
			],
			[
				"manag",
				"supportal_manageIssues"
			],
			[
				"auto",
				"auto_now_add"
			]
		]
	},
	"buffers":
	[
		{
			"file": "supportal/firstApp/templates/index.html",
			"settings":
			{
				"buffer_size": 551,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/supportal/urls.py",
			"settings":
			{
				"buffer_size": 932,
				"line_ending": "Unix"
			}
		},
		{
			"file": "supportal/firstApp/models.py",
			"settings":
			{
				"buffer_size": 1231,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/serializers.py",
			"settings":
			{
				"buffer_size": 239,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/templates/update_profile.html",
			"settings":
			{
				"buffer_size": 1058,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/forms.py",
			"settings":
			{
				"buffer_size": 967,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/templates/registration/login.html",
			"settings":
			{
				"buffer_size": 477,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/templates/view_issues.html",
			"settings":
			{
				"buffer_size": 1197,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from django.http import HttpResponse, HttpResponseRedirect\nfrom django.shortcuts import render, get_object_or_404, render_to_response, redirect\nfrom django.contrib import auth\nfrom django.contrib.auth.models import User, Group\nfrom django.contrib.auth.decorators import login_required \nfrom django.contrib.auth import logout\nfrom .models import Issue, baseUser, Developer\nfrom .forms import IssueForm, UserForm, updateUserForm, deleteForm\nfrom django.core import mail\nfrom bitbucket.bitbucket import Bitbucket\n#from oauthlib.oauth2 import BackendApplicationClient\n#from requests_oauthlib import OAuth2Session\nimport datetime\nimport requests\nimport json\nimport time\nimport logging\n\nbucket_url = 'https://api.bitbucket.org/1.0/repositories/shawdl/supportal2016test/issues'\nslack_url = 'https://hooks.slack.com/services/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'\nclient_id = 'djnug2AYYSwzudDYdj'\nclient_secret = 'K42BdNv8WXAD5erXt8ZK9SEycH39mQ5u'\nredirect_uri = 'https://localhost/supportal'\nauth_uri = \"https://bitbucket.org/site/oauth2/authorize\"\ntoken_uri = \"https://bitbucket.org/site/oauth2/access_token\"\n\n#Login page, uses index.html as template and django built in login\ndef login(request):\n	context = {\n		\"title\": \"Login\"\n	}\n	return render(request, \"index.html\", context)\n\n#Logout view logs out user and returns them to the login page, should implement a message if possible\ndef logout_view(request):\n	logout(request)\n	return redirect('login')\n\n#New user page, creates a form to create new user, once new user is created redirects the user to the login page\n#which the user can then immeadiately login\ndef newUser(request):\n	if request.method == \"POST\":\n		form = UserForm(request.POST)\n		if form.is_valid():\n			g = Group.objects.get(name='Users')\n			new_user = User.objects.create_user(**form.cleaned_data)\n			g.user_set.add(new_user)\n			mail.send_mail(\n				'Oak Labs - Supportal: Account ' + str(new_user.username) + ' has been created',\n				'Your account with Supportal has been created. Thank you.',\n				'supportal@oaklabs.io',\n				[str(new_user.email)],\n			)\n			return HttpResponseRedirect(\"/supportal/\")\n	else:\n		form = UserForm()\n\n	return render(request, \"adduser.html\", {\"form\": form})\n\n#*****Need to fix, tries to make new user instead of updating user*****\n@login_required\ndef updateProfile(request):\n	getUser = request.user\n	if not request.user.is_superuser:\n		getbaseUser = baseUser.objects.get(user=getUser)\n	if request.method == 'POST':\n		form = updateUserForm(request.POST, instance=request.user)\n		if form.is_valid():\n			user = form.save(commit=False)\n			user.save()\n			return HttpResponseRedirect(\"/supportal/main\")\n	else:\n		form = updateUserForm()\n\n	if not request.user.is_superuser:\n		context = {\n			\"form\": form,\n			\"current_first\": getUser.first_name,\n			\"current_last\": getUser.last_name,\n			\"current_email\":getUser.email,\n			\"hours_avail\": getbaseUser.time_available,\n		}\n	else:\n		context = {\n			\"form\": form,\n			\"current_first\": getUser.first_name,\n			\"current_last\": getUser.last_name,\n			\"current_email\":getUser.email,\n		}\n	return render(request, 'update_profile.html', context)\n\n#Main page\n@login_required\ndef mainPage(request):\n	context = {\n		\"title\": \"Main\"\n	}\n	return render(request, \"index.html\", context)\n\n\n#View issues, currently gets all issues from a singular repository and displays as a formatted table\n@login_required\ndef viewIssues(request):\n	#lists for issue titles and content\n	bucket_id = []\n	bucket_titles = []\n	bucket_content = []\n	bucket_kind = []\n	bucket_priority = []\n	#call api to get initial repository and find number of issues in said repository\n	r = requests.get(bucket_url)\n	bucket_json = r.json()\n	issue_count = bucket_json['count']\n\n	if request.method == \"POST\":\n		form = deleteForm(request.POST)\n\n		if form.is_valid():\n			bb = Bitbucket('shawdl', 'TF2MarsVolta', repo_name_or_slug=\"supportal2016test\")\n			success, result = bb.issue.delete(issue_id=form.cleaned_data['id_to_be_deleted'])\n	else:\n		form = deleteForm()\n\n	x = 1 #issue counter\n	y = x #id counter\n	while x <= issue_count:\n		#get each individual issue by id\n		r2 = requests.get('https://api.bitbucket.org/1.0/repositories/shawdl/supportal2016test/issues/' + str(y))\n		if r2.text == \"Not Found\":\n			#y is necessary because x = count only counts the number of issues, meaning that it will not reach an id of 7\n			#with a count of 3. Thus, y helps us reach the other ids\n			y += 1\n		else:\n			bucket_issues = r2.json()\n			print(r2.status_code)\n			print(r2.text)\n		#store converted issue titles and content in the appropriate lists, only if the issues have a status of open\n			if bucket_issues['status'] != \"closed\":\n				bucket_id.append(bucket_issues['local_id'])\n				bucket_titles.append(bucket_issues['title'])\n				bucket_content.append(bucket_issues['content'])\n				bucket_kind.append(bucket_issues['metadata']['kind'])\n				bucket_priority.append(bucket_issues['priority'])\n		#Move to next issue\n			x += 1\n			y += 1\n\n	zipped_data = zip(bucket_id, bucket_titles, bucket_content, bucket_kind, bucket_priority)\n	#pass the lists to the template\n	if request.user.is_superuser:\n		context = {\n			\"zipped_data\": zipped_data,\n			\"title\": \"View Issues\",\n			\"bucket_url\": bucket_url,\n			\"form\": form\n		}\n	else:\n		context = {\n			\"zipped_data\": zipped_data,\n			\"title\": \"View Issues\",\n			\"bucket_url\": bucket_url\n		}\n\n	return render(request, \"view_issues.html\", context)\n\n#CREATES ISSUES MOTHERFUCKER WE IN THIS\n@login_required\ndef createIssue(request):\n	if request.method == \"POST\":\n		getUser = request.user\n		form = IssueForm(request.POST)\n\n		if form.is_valid():\n			priority = \"minor\"\n			issue = Issue(**form.cleaned_data)\n			title = form.cleaned_data['title']\n			kind = form.cleaned_data['kind']\n			content = form.cleaned_data['description']\n\n			if issue.highPriority:\n				current_time = datetime.datetime.now().time()\n				users = Developer.objects.all()\n				priority = \"major\"\n				assigned = \"unassigned\"\n				for user in users:\n					if user.oncall_clockin <= current_time <= user.oncall_clockout:\n						assigned = str(user.user)\n					elif user.oncall_clockin > user.oncall_clockout:\n						end = datetime.time(hour=23, minute=59, second=59, microsecond=999999)\n						if user.oncall_clockin <= current_time <= end:\n							assigned = str(user.user)\n						elif current_time <= end:\n							assigned = str(user.user)\n						\n				slack_payload={\n					\"text\": str(getUser) + \" just created a high priority issue:\\n\" + \"*\" + title + \"*\" + \"\\n\" + \">\"\n					+ content + \"\\nAssigned to: @\" + assigned\n				}\n\n				r = requests.post(slack_url, json=slack_payload)\n\n			bb = Bitbucket('shawdl', 'TF2MarsVolta', repo_name_or_slug=\"supportal2016test\")\n			success, result = bb.issue.create(\n				title=u''+title,\n				content=u''+content,\n				priority=u''+priority,\n				responsible=bb.username,\n				status=u'new',\n				kind=u''+kind)\n\n	else:\n		form = IssueForm()\n\n	if request.user.is_superuser:\n		context = {\n			\"form\": form,\n		}\n\n	else:\n		context = {\n			\"form\": form,\n			\"hours_avail\": baseUser.objects.get(user=request.user).time_available,\n		}\n\n	return render(request, \"issue_form.html\", context)",
			"file": "supportal/firstApp/views.py",
			"file_size": 7311,
			"file_write_time": 131250942880095898,
			"settings":
			{
				"buffer_size": 7087,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/templates/issue_form.html",
			"settings":
			{
				"buffer_size": 871,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/templates/base.html",
			"settings":
			{
				"buffer_size": 902,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/firstApp/templates/adduser.html",
			"settings":
			{
				"buffer_size": 1511,
				"line_ending": "Windows"
			}
		},
		{
			"file": "supportal/supportal/settings.py",
			"settings":
			{
				"buffer_size": 4110,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/David Shaw/Desktop/supportal_django",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/static",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/static/css",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/registration",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/supportal"
	],
	"file_history":
	[
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/edit_users.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/urls.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/supportal/settings.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/adduser.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/views.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/issue_form.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/models.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/static/css/supportal.css",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/registration/password_reset_form.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/static/viewissues.js",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/registration/password_reset_email.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/registration/password_reset_confirm.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/registration/password_reset_done.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/update_profile.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/registration/password_reset_complete.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/edit_profile.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/supportal/wsgi.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/manage.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/admin.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/forms.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/registration/login.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/migrations/0011_auto_20161116_1433.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/view_issues.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/auth_redirect.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/supportal/urls.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/registration/login.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/firstApp/templates/login.html",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/backend/views.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/backend/urls.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/supportal/supportal_backend/views.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/supportal/supportal/urls.py",
		"/C/Users/David Shaw/Desktop/supportal_django/supportal/supportal/supportal_backend/urls.py",
		"/C/Users/David Shaw/Desktop/test_env/mysite/mysite/urls.py",
		"/C/Users/David Shaw/Desktop/test_env/mysite/polls/urls.py",
		"/C/Users/David Shaw/Desktop/test_env/mysite/mysite/settings.py",
		"/C/Users/David Shaw/Desktop/test_env/mysite/polls/views.py",
		"/C/Users/David Shaw/Desktop/test_env/test_project_new/test_project_new/settings.py",
		"/C/Users/David Shaw/Desktop/test_env/test_project_new/test_project_new/urls.py",
		"/C/Users/David Shaw/Desktop/test_env/pip-selfcheck.json",
		"/C/Users/David Shaw/Desktop/test_env/test_project_new/manage.py",
		"/C/Users/David Shaw/Desktop/test_env/test_project_new/test_project_new/wsgi.py",
		"/C/Users/David Shaw/Desktop/test_env/test_project_new/test_project_new/__init__.py",
		"/C/Users/David Shaw/Desktop/School/ReactExample/src/app.js",
		"/C/Users/David Shaw/Desktop/School/ReactExample/package.json",
		"/C/Users/David Shaw/Desktop/School/ReactExample/webpack.config.js",
		"/C/Users/David Shaw/Desktop/School/ReactExample/index.html",
		"/C/Users/David Shaw/Desktop/School/react-15.3.1/index.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"userprofile",
			"Custom",
			"User"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "supportal/firstApp/templates/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 551,
						"regions":
						{
						},
						"selection":
						[
							[
								209,
								209
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "supportal/supportal/urls.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 932,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "supportal/firstApp/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1231,
						"regions":
						{
						},
						"selection":
						[
							[
								589,
								589
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "supportal/firstApp/serializers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 239,
						"regions":
						{
						},
						"selection":
						[
							[
								203,
								203
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "supportal/firstApp/templates/update_profile.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1058,
						"regions":
						{
						},
						"selection":
						[
							[
								790,
								737
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "supportal/firstApp/forms.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 967,
						"regions":
						{
						},
						"selection":
						[
							[
								535,
								535
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "supportal/firstApp/templates/registration/login.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 477,
						"regions":
						{
						},
						"selection":
						[
							[
								249,
								249
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "supportal/firstApp/templates/view_issues.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1197,
						"regions":
						{
						},
						"selection":
						[
							[
								12,
								12
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "supportal/firstApp/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7087,
						"regions":
						{
						},
						"selection":
						[
							[
								6896,
								6896
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2600.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "supportal/firstApp/templates/issue_form.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 871,
						"regions":
						{
						},
						"selection":
						[
							[
								719,
								719
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "supportal/firstApp/templates/base.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 902,
						"regions":
						{
						},
						"selection":
						[
							[
								626,
								626
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "supportal/firstApp/templates/adduser.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1511,
						"regions":
						{
						},
						"selection":
						[
							[
								564,
								564
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "supportal/supportal/settings.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4110,
						"regions":
						{
						},
						"selection":
						[
							[
								1140,
								1140
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "supportalsublime.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 228.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
